// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApiServer.Data;

#nullable disable

namespace WebApiServer.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("User", b =>
                {
                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserEmail");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebApiServer.Models.DataBankFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("FolderId")
                        .HasColumnType("integer");

                    b.Property<bool>("Public")
                        .HasColumnType("boolean");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UploadedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UploadedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DataBankFiles");
                });

            modelBuilder.Entity("WebApiServer.Models.DataBankFolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("Public")
                        .HasColumnType("boolean");

                    b.Property<string>("UploadedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DataBankFolders");
                });

            modelBuilder.Entity("WebApiServer.Models.Factors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Factor")
                        .HasColumnType("double precision");

                    b.Property<int>("Spectrum")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Factors");
                });

            modelBuilder.Entity("WebApiServer.Models.LoadedData", b =>
                {
                    b.Property<int>("IdData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdData"));

                    b.Property<double>("Excitation")
                        .HasColumnType("double precision");

                    b.Property<int>("IdFile")
                        .HasColumnType("integer");

                    b.Property<double>("Intensity")
                        .HasColumnType("double precision");

                    b.Property<double?>("MultipliedIntensity")
                        .HasColumnType("double precision");

                    b.HasKey("IdData");

                    b.ToTable("LoadedDatas");
                });

            modelBuilder.Entity("WebApiServer.Models.LoadedFile", b =>
                {
                    b.Property<int>("IdFile")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFile"));

                    b.Property<double?>("Factor")
                        .HasColumnType("double precision");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdFolder")
                        .HasColumnType("integer");

                    b.Property<int>("Spectrum")
                        .HasColumnType("integer");

                    b.HasKey("IdFile");

                    b.ToTable("LoadedFiles");
                });

            modelBuilder.Entity("WebApiServer.Models.LoadedFolder", b =>
                {
                    b.Property<int>("IdFolder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdFolder"));

                    b.Property<string>("FolderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdProject")
                        .HasColumnType("integer");

                    b.HasKey("IdFolder");

                    b.ToTable("LoadedFolders");
                });

            modelBuilder.Entity("WebApiServer.Models.ProfileData", b =>
                {
                    b.Property<int>("IdProfileData")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProfileData"));

                    b.Property<double>("Excitation")
                        .HasColumnType("double precision");

                    b.Property<int>("IdFolder")
                        .HasColumnType("integer");

                    b.Property<double>("MaxIntensity")
                        .HasColumnType("double precision");

                    b.HasKey("IdProfileData");

                    b.ToTable("ProfileDatas");
                });

            modelBuilder.Entity("WebApiServer.Models.Project", b =>
                {
                    b.Property<int>("IdProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProject"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdProject");

                    b.ToTable("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
